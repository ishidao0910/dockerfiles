#!/bin/bash

USER_NAME=$USER

PYTHON="311"
PYTHON_CP="311"

CUDA_MIDDLE_VERSION="11.8"

TENSORRT_FULL_VERSION="8.6.1.6"
TENSORRT_MIDDLE_VERSION="8.6.1"
TENSORRT_OSS_VERSION="23.08"
TENSORRT_OS="ubuntu2204"
TORCH_TENSORRT_VERSION="1.4.0"

ONNX_TENSORRT_TAG="release/8.6-GA"
ONNX_VERSION="1.14.1"
ONNXRUNTIME_VERSION="1.15.1"
ONNXRUNTIME_CLONE_TAG="ae74a517b62baa6d973e46b5b51ac9a640512c46"

OPENVINO_VERSION="2023.0.2"

POETRY_VERSION="1.6.1"

IMAGE_NAME="${USER_NAME}/torch-onnx${ONNX_VERSION//./}-${ONNXRUNTIME_VERSION//./}-trt${TENSORRT_MIDDLE_VERSION//./}-vino${OPENVINO_VERSION//./}-server:latest"

docker build --progress=plain \
    --build-arg PYTHON=${PYTHON} \
    --build-arg PYTHON_CP=${PYTHON_CP} \
    --build-arg CUDA_MIDDLE_VERSION=${CUDA_MIDDLE_VERSION} \
    --build-arg TENSORRT_FULL_VERSION=${TENSORRT_FULL_VERSION} \
    --build-arg TENSORRT_MIDDLE_VERSION=${TENSORRT_MIDDLE_VERSION} \
    --build-arg TENSORRT_OSS_VERSION=${TENSORRT_OSS_VERSION} \
    --build-arg TENSORRT_OS=${TENSORRT_OS} \
    --build-arg TORCH_TENSORRT_VERSION=${TORCH_TENSORRT_VERSION} \
    --build-arg ONNX_TENSORRT_TAG=${ONNX_TENSORRT_TAG} \
    --build-arg ONNX_VERSION=${ONNX_VERSION} \
    --build-arg ONNXRUNTIME_VERSION=${ONNXRUNTIME_VERSION} \
    --build-arg ONNXRUNTIME_CLONE_TAG=${ONNXRUNTIME_CLONE_TAG} \
    --build-arg OPENVINO_VERSION=${OPENVINO_VERSION} \
    --build-arg POETRY_VERSION=${POETRY_VERSION} \
    -t ${IMAGE_NAME} .
